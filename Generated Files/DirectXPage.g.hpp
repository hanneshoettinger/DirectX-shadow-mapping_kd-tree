

//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"
#include "DirectXPage.xaml.h"




void ::ShadowMapping::DirectXPage::InitializeComponent()
{
    if (_contentLoaded)
        return;

    _contentLoaded = true;

    // Call LoadComponent on ms-appx:///DirectXPage.xaml
    ::Windows::UI::Xaml::Application::LoadComponent(this, ref new ::Windows::Foundation::Uri(L"ms-appx:///DirectXPage.xaml"), ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);

    // Get the SwapChainPanel named 'swapChainPanel'
    swapChainPanel = safe_cast<::Windows::UI::Xaml::Controls::SwapChainPanel^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"swapChainPanel"));
    // Get the TextBlock named 'ErrorText'
    ErrorText = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"ErrorText"));
    // Get the ComboBox named 'comboBox'
    comboBox = safe_cast<::Windows::UI::Xaml::Controls::ComboBox^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"comboBox"));
    // Get the CheckBox named 'Earth_Normal_Checkbox'
    Earth_Normal_Checkbox = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"Earth_Normal_Checkbox"));
    // Get the CheckBox named 'Moon_Normal_Checkbox'
    Moon_Normal_Checkbox = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"Moon_Normal_Checkbox"));
    // Get the TextBox named 'Distance'
    Distance = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"Distance"));
    // Get the CheckBox named 'KDtree'
    KDtree = safe_cast<::Windows::UI::Xaml::Controls::CheckBox^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"KDtree"));
    // Get the Slider named 'SampleCountSlider'
    SampleCountSlider = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"SampleCountSlider"));
    // Get the TextBlock named 'CurrentSampleCount'
    CurrentSampleCount = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(static_cast<Windows::UI::Xaml::IFrameworkElement^>(this)->FindName(L"CurrentSampleCount"));
}

void ::ShadowMapping::DirectXPage::Connect(int connectionId, Platform::Object^ target)
{
    switch (connectionId)
    {
    case 1:
        (safe_cast<::Windows::UI::Xaml::Controls::Primitives::Selector^>(target))->SelectionChanged +=
            ref new ::Windows::UI::Xaml::Controls::SelectionChangedEventHandler(this, (void (::ShadowMapping::DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::Controls::SelectionChangedEventArgs^))&DirectXPage::comboBox_SelectionChanged_1);
        break;
    case 2:
        (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(target))->Checked +=
            ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::ShadowMapping::DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::Earth_Normal_Checkbox_Checked);
        (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(target))->Unchecked +=
            ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::ShadowMapping::DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::Earth_Normal_Checkbox_Unchecked);
        break;
    case 3:
        (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(target))->Checked +=
            ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::ShadowMapping::DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::Moon_Normal_Checkbox_Checked);
        (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(target))->Unchecked +=
            ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::ShadowMapping::DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::Moon_Normal_Checkbox_Unchecked);
        break;
    case 4:
        (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(target))->Checked +=
            ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::ShadowMapping::DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::KDtree_Checked);
        (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(target))->Unchecked +=
            ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::ShadowMapping::DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::KDtree_Unchecked);
        break;
    case 5:
        (safe_cast<::Windows::UI::Xaml::Controls::Primitives::RangeBase^>(target))->ValueChanged +=
            ref new ::Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventHandler(this, (void (::ShadowMapping::DirectXPage::*)(Platform::Object^, Windows::UI::Xaml::Controls::Primitives::RangeBaseValueChangedEventArgs^))&DirectXPage::SampleCountSlider_ValueChanged);
        break;
    }
    (void)connectionId; // Unused parameter
    (void)target; // Unused parameter
    _contentLoaded = true;
}

